/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ExampleRouteImport } from './routes/example'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExampleIndexRouteImport } from './routes/example/index'
import { Route as ExampleUsersRouteImport } from './routes/example/users'
import { Route as ExampleRedirectRouteImport } from './routes/example/redirect'
import { Route as ExamplePostsRouteImport } from './routes/example/posts'
import { Route as ExampleDeferredRouteImport } from './routes/example/deferred'
import { Route as ExamplePathlessLayoutRouteImport } from './routes/example/_pathlessLayout'
import { Route as ExampleUsersIndexRouteImport } from './routes/example/users.index'
import { Route as ExamplePostsIndexRouteImport } from './routes/example/posts.index'
import { Route as ExampleUsersUserIdRouteImport } from './routes/example/users.$userId'
import { Route as ExamplePostsPostIdRouteImport } from './routes/example/posts.$postId'
import { Route as ExamplePathlessLayoutNestedLayoutRouteImport } from './routes/example/_pathlessLayout/_nested-layout'
import { Route as ExamplePostsPostIdDeepRouteImport } from './routes/example/posts_.$postId.deep'
import { Route as ExamplePathlessLayoutNestedLayoutRouteBRouteImport } from './routes/example/_pathlessLayout/_nested-layout/route-b'
import { Route as ExamplePathlessLayoutNestedLayoutRouteARouteImport } from './routes/example/_pathlessLayout/_nested-layout/route-a'
import { ServerRoute as ExampleCustomScriptDotjsServerRouteImport } from './routes/example/customScript[.]js'
import { ServerRoute as ExampleApiUsersServerRouteImport } from './routes/example/api/users'
import { ServerRoute as ExampleApiUsersUserIdServerRouteImport } from './routes/example/api/users.$userId'

const rootServerRouteImport = createServerRootRoute()

const ExampleRoute = ExampleRouteImport.update({
  id: '/example',
  path: '/example',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleIndexRoute = ExampleIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExampleRoute,
} as any)
const ExampleUsersRoute = ExampleUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => ExampleRoute,
} as any)
const ExampleRedirectRoute = ExampleRedirectRouteImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => ExampleRoute,
} as any)
const ExamplePostsRoute = ExamplePostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => ExampleRoute,
} as any)
const ExampleDeferredRoute = ExampleDeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => ExampleRoute,
} as any)
const ExamplePathlessLayoutRoute = ExamplePathlessLayoutRouteImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => ExampleRoute,
} as any)
const ExampleUsersIndexRoute = ExampleUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExampleUsersRoute,
} as any)
const ExamplePostsIndexRoute = ExamplePostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ExamplePostsRoute,
} as any)
const ExampleUsersUserIdRoute = ExampleUsersUserIdRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ExampleUsersRoute,
} as any)
const ExamplePostsPostIdRoute = ExamplePostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => ExamplePostsRoute,
} as any)
const ExamplePathlessLayoutNestedLayoutRoute =
  ExamplePathlessLayoutNestedLayoutRouteImport.update({
    id: '/_nested-layout',
    getParentRoute: () => ExamplePathlessLayoutRoute,
  } as any)
const ExamplePostsPostIdDeepRoute = ExamplePostsPostIdDeepRouteImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => ExampleRoute,
} as any)
const ExamplePathlessLayoutNestedLayoutRouteBRoute =
  ExamplePathlessLayoutNestedLayoutRouteBRouteImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => ExamplePathlessLayoutNestedLayoutRoute,
  } as any)
const ExamplePathlessLayoutNestedLayoutRouteARoute =
  ExamplePathlessLayoutNestedLayoutRouteARouteImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => ExamplePathlessLayoutNestedLayoutRoute,
  } as any)
const ExampleCustomScriptDotjsServerRoute =
  ExampleCustomScriptDotjsServerRouteImport.update({
    id: '/example/customScript.js',
    path: '/example/customScript.js',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ExampleApiUsersServerRoute = ExampleApiUsersServerRouteImport.update({
  id: '/example/api/users',
  path: '/example/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ExampleApiUsersUserIdServerRoute =
  ExampleApiUsersUserIdServerRouteImport.update({
    id: '/$userId',
    path: '/$userId',
    getParentRoute: () => ExampleApiUsersServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/example': typeof ExamplePathlessLayoutNestedLayoutRouteWithChildren
  '/example/deferred': typeof ExampleDeferredRoute
  '/example/posts': typeof ExamplePostsRouteWithChildren
  '/example/redirect': typeof ExampleRedirectRoute
  '/example/users': typeof ExampleUsersRouteWithChildren
  '/example/': typeof ExampleIndexRoute
  '/example/posts/$postId': typeof ExamplePostsPostIdRoute
  '/example/users/$userId': typeof ExampleUsersUserIdRoute
  '/example/posts/': typeof ExamplePostsIndexRoute
  '/example/users/': typeof ExampleUsersIndexRoute
  '/example/route-a': typeof ExamplePathlessLayoutNestedLayoutRouteARoute
  '/example/route-b': typeof ExamplePathlessLayoutNestedLayoutRouteBRoute
  '/example/posts/$postId/deep': typeof ExamplePostsPostIdDeepRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/example': typeof ExamplePathlessLayoutNestedLayoutRouteWithChildren
  '/example/deferred': typeof ExampleDeferredRoute
  '/example/redirect': typeof ExampleRedirectRoute
  '/example/posts/$postId': typeof ExamplePostsPostIdRoute
  '/example/users/$userId': typeof ExampleUsersUserIdRoute
  '/example/posts': typeof ExamplePostsIndexRoute
  '/example/users': typeof ExampleUsersIndexRoute
  '/example/route-a': typeof ExamplePathlessLayoutNestedLayoutRouteARoute
  '/example/route-b': typeof ExamplePathlessLayoutNestedLayoutRouteBRoute
  '/example/posts/$postId/deep': typeof ExamplePostsPostIdDeepRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/example': typeof ExampleRouteWithChildren
  '/example/_pathlessLayout': typeof ExamplePathlessLayoutRouteWithChildren
  '/example/deferred': typeof ExampleDeferredRoute
  '/example/posts': typeof ExamplePostsRouteWithChildren
  '/example/redirect': typeof ExampleRedirectRoute
  '/example/users': typeof ExampleUsersRouteWithChildren
  '/example/': typeof ExampleIndexRoute
  '/example/_pathlessLayout/_nested-layout': typeof ExamplePathlessLayoutNestedLayoutRouteWithChildren
  '/example/posts/$postId': typeof ExamplePostsPostIdRoute
  '/example/users/$userId': typeof ExampleUsersUserIdRoute
  '/example/posts/': typeof ExamplePostsIndexRoute
  '/example/users/': typeof ExampleUsersIndexRoute
  '/example/_pathlessLayout/_nested-layout/route-a': typeof ExamplePathlessLayoutNestedLayoutRouteARoute
  '/example/_pathlessLayout/_nested-layout/route-b': typeof ExamplePathlessLayoutNestedLayoutRouteBRoute
  '/example/posts_/$postId/deep': typeof ExamplePostsPostIdDeepRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/example'
    | '/example/deferred'
    | '/example/posts'
    | '/example/redirect'
    | '/example/users'
    | '/example/'
    | '/example/posts/$postId'
    | '/example/users/$userId'
    | '/example/posts/'
    | '/example/users/'
    | '/example/route-a'
    | '/example/route-b'
    | '/example/posts/$postId/deep'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/example'
    | '/example/deferred'
    | '/example/redirect'
    | '/example/posts/$postId'
    | '/example/users/$userId'
    | '/example/posts'
    | '/example/users'
    | '/example/route-a'
    | '/example/route-b'
    | '/example/posts/$postId/deep'
  id:
    | '__root__'
    | '/'
    | '/example'
    | '/example/_pathlessLayout'
    | '/example/deferred'
    | '/example/posts'
    | '/example/redirect'
    | '/example/users'
    | '/example/'
    | '/example/_pathlessLayout/_nested-layout'
    | '/example/posts/$postId'
    | '/example/users/$userId'
    | '/example/posts/'
    | '/example/users/'
    | '/example/_pathlessLayout/_nested-layout/route-a'
    | '/example/_pathlessLayout/_nested-layout/route-b'
    | '/example/posts_/$postId/deep'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExampleRoute: typeof ExampleRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/example/customScript.js': typeof ExampleCustomScriptDotjsServerRoute
  '/example/api/users': typeof ExampleApiUsersServerRouteWithChildren
  '/example/api/users/$userId': typeof ExampleApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/example/customScript.js': typeof ExampleCustomScriptDotjsServerRoute
  '/example/api/users': typeof ExampleApiUsersServerRouteWithChildren
  '/example/api/users/$userId': typeof ExampleApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/example/customScript.js': typeof ExampleCustomScriptDotjsServerRoute
  '/example/api/users': typeof ExampleApiUsersServerRouteWithChildren
  '/example/api/users/$userId': typeof ExampleApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/example/customScript.js'
    | '/example/api/users'
    | '/example/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/example/customScript.js'
    | '/example/api/users'
    | '/example/api/users/$userId'
  id:
    | '__root__'
    | '/example/customScript.js'
    | '/example/api/users'
    | '/example/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ExampleCustomScriptDotjsServerRoute: typeof ExampleCustomScriptDotjsServerRoute
  ExampleApiUsersServerRoute: typeof ExampleApiUsersServerRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/': {
      id: '/example/'
      path: '/'
      fullPath: '/example/'
      preLoaderRoute: typeof ExampleIndexRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/users': {
      id: '/example/users'
      path: '/users'
      fullPath: '/example/users'
      preLoaderRoute: typeof ExampleUsersRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/redirect': {
      id: '/example/redirect'
      path: '/redirect'
      fullPath: '/example/redirect'
      preLoaderRoute: typeof ExampleRedirectRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/posts': {
      id: '/example/posts'
      path: '/posts'
      fullPath: '/example/posts'
      preLoaderRoute: typeof ExamplePostsRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/deferred': {
      id: '/example/deferred'
      path: '/deferred'
      fullPath: '/example/deferred'
      preLoaderRoute: typeof ExampleDeferredRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/_pathlessLayout': {
      id: '/example/_pathlessLayout'
      path: ''
      fullPath: '/example'
      preLoaderRoute: typeof ExamplePathlessLayoutRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/users/': {
      id: '/example/users/'
      path: '/'
      fullPath: '/example/users/'
      preLoaderRoute: typeof ExampleUsersIndexRouteImport
      parentRoute: typeof ExampleUsersRoute
    }
    '/example/posts/': {
      id: '/example/posts/'
      path: '/'
      fullPath: '/example/posts/'
      preLoaderRoute: typeof ExamplePostsIndexRouteImport
      parentRoute: typeof ExamplePostsRoute
    }
    '/example/users/$userId': {
      id: '/example/users/$userId'
      path: '/$userId'
      fullPath: '/example/users/$userId'
      preLoaderRoute: typeof ExampleUsersUserIdRouteImport
      parentRoute: typeof ExampleUsersRoute
    }
    '/example/posts/$postId': {
      id: '/example/posts/$postId'
      path: '/$postId'
      fullPath: '/example/posts/$postId'
      preLoaderRoute: typeof ExamplePostsPostIdRouteImport
      parentRoute: typeof ExamplePostsRoute
    }
    '/example/_pathlessLayout/_nested-layout': {
      id: '/example/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: '/example'
      preLoaderRoute: typeof ExamplePathlessLayoutNestedLayoutRouteImport
      parentRoute: typeof ExamplePathlessLayoutRoute
    }
    '/example/posts_/$postId/deep': {
      id: '/example/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/example/posts/$postId/deep'
      preLoaderRoute: typeof ExamplePostsPostIdDeepRouteImport
      parentRoute: typeof ExampleRoute
    }
    '/example/_pathlessLayout/_nested-layout/route-b': {
      id: '/example/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/example/route-b'
      preLoaderRoute: typeof ExamplePathlessLayoutNestedLayoutRouteBRouteImport
      parentRoute: typeof ExamplePathlessLayoutNestedLayoutRoute
    }
    '/example/_pathlessLayout/_nested-layout/route-a': {
      id: '/example/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/example/route-a'
      preLoaderRoute: typeof ExamplePathlessLayoutNestedLayoutRouteARouteImport
      parentRoute: typeof ExamplePathlessLayoutNestedLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/example/customScript.js': {
      id: '/example/customScript.js'
      path: '/example/customScript.js'
      fullPath: '/example/customScript.js'
      preLoaderRoute: typeof ExampleCustomScriptDotjsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/example/api/users': {
      id: '/example/api/users'
      path: '/example/api/users'
      fullPath: '/example/api/users'
      preLoaderRoute: typeof ExampleApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/example/api/users/$userId': {
      id: '/example/api/users/$userId'
      path: '/$userId'
      fullPath: '/example/api/users/$userId'
      preLoaderRoute: typeof ExampleApiUsersUserIdServerRouteImport
      parentRoute: typeof ExampleApiUsersServerRoute
    }
  }
}

interface ExamplePathlessLayoutNestedLayoutRouteChildren {
  ExamplePathlessLayoutNestedLayoutRouteARoute: typeof ExamplePathlessLayoutNestedLayoutRouteARoute
  ExamplePathlessLayoutNestedLayoutRouteBRoute: typeof ExamplePathlessLayoutNestedLayoutRouteBRoute
}

const ExamplePathlessLayoutNestedLayoutRouteChildren: ExamplePathlessLayoutNestedLayoutRouteChildren =
  {
    ExamplePathlessLayoutNestedLayoutRouteARoute:
      ExamplePathlessLayoutNestedLayoutRouteARoute,
    ExamplePathlessLayoutNestedLayoutRouteBRoute:
      ExamplePathlessLayoutNestedLayoutRouteBRoute,
  }

const ExamplePathlessLayoutNestedLayoutRouteWithChildren =
  ExamplePathlessLayoutNestedLayoutRoute._addFileChildren(
    ExamplePathlessLayoutNestedLayoutRouteChildren,
  )

interface ExamplePathlessLayoutRouteChildren {
  ExamplePathlessLayoutNestedLayoutRoute: typeof ExamplePathlessLayoutNestedLayoutRouteWithChildren
}

const ExamplePathlessLayoutRouteChildren: ExamplePathlessLayoutRouteChildren = {
  ExamplePathlessLayoutNestedLayoutRoute:
    ExamplePathlessLayoutNestedLayoutRouteWithChildren,
}

const ExamplePathlessLayoutRouteWithChildren =
  ExamplePathlessLayoutRoute._addFileChildren(
    ExamplePathlessLayoutRouteChildren,
  )

interface ExamplePostsRouteChildren {
  ExamplePostsPostIdRoute: typeof ExamplePostsPostIdRoute
  ExamplePostsIndexRoute: typeof ExamplePostsIndexRoute
}

const ExamplePostsRouteChildren: ExamplePostsRouteChildren = {
  ExamplePostsPostIdRoute: ExamplePostsPostIdRoute,
  ExamplePostsIndexRoute: ExamplePostsIndexRoute,
}

const ExamplePostsRouteWithChildren = ExamplePostsRoute._addFileChildren(
  ExamplePostsRouteChildren,
)

interface ExampleUsersRouteChildren {
  ExampleUsersUserIdRoute: typeof ExampleUsersUserIdRoute
  ExampleUsersIndexRoute: typeof ExampleUsersIndexRoute
}

const ExampleUsersRouteChildren: ExampleUsersRouteChildren = {
  ExampleUsersUserIdRoute: ExampleUsersUserIdRoute,
  ExampleUsersIndexRoute: ExampleUsersIndexRoute,
}

const ExampleUsersRouteWithChildren = ExampleUsersRoute._addFileChildren(
  ExampleUsersRouteChildren,
)

interface ExampleRouteChildren {
  ExamplePathlessLayoutRoute: typeof ExamplePathlessLayoutRouteWithChildren
  ExampleDeferredRoute: typeof ExampleDeferredRoute
  ExamplePostsRoute: typeof ExamplePostsRouteWithChildren
  ExampleRedirectRoute: typeof ExampleRedirectRoute
  ExampleUsersRoute: typeof ExampleUsersRouteWithChildren
  ExampleIndexRoute: typeof ExampleIndexRoute
  ExamplePostsPostIdDeepRoute: typeof ExamplePostsPostIdDeepRoute
}

const ExampleRouteChildren: ExampleRouteChildren = {
  ExamplePathlessLayoutRoute: ExamplePathlessLayoutRouteWithChildren,
  ExampleDeferredRoute: ExampleDeferredRoute,
  ExamplePostsRoute: ExamplePostsRouteWithChildren,
  ExampleRedirectRoute: ExampleRedirectRoute,
  ExampleUsersRoute: ExampleUsersRouteWithChildren,
  ExampleIndexRoute: ExampleIndexRoute,
  ExamplePostsPostIdDeepRoute: ExamplePostsPostIdDeepRoute,
}

const ExampleRouteWithChildren =
  ExampleRoute._addFileChildren(ExampleRouteChildren)

interface ExampleApiUsersServerRouteChildren {
  ExampleApiUsersUserIdServerRoute: typeof ExampleApiUsersUserIdServerRoute
}

const ExampleApiUsersServerRouteChildren: ExampleApiUsersServerRouteChildren = {
  ExampleApiUsersUserIdServerRoute: ExampleApiUsersUserIdServerRoute,
}

const ExampleApiUsersServerRouteWithChildren =
  ExampleApiUsersServerRoute._addFileChildren(
    ExampleApiUsersServerRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExampleRoute: ExampleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ExampleCustomScriptDotjsServerRoute: ExampleCustomScriptDotjsServerRoute,
  ExampleApiUsersServerRoute: ExampleApiUsersServerRouteWithChildren,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
